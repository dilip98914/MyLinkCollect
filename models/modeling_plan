TODO: common crud api for all models but make it robust

timestamps(createdAt+updatedAt) and deleted_at is by default on every model

user
    -id(use the id best suitable like in case of cassandra analysis)->id which is not uuid but serializable
    -full_name
    -address
    -city
    -state
    -country
    -username
    -password
    -email
    -dob
    -profile_pic
    -resume_url(or string data)
    -companies_array
    -study_array
    -project_array_from_resume
    -type(developer or client)
    -bank_account_detals
    -bank_meta
    -upi_ids

clientCompany
    -title
    -description
    -address
    -user_id

loginLogs
    -user_id
    -last_login_at
    -date&time(createdAt)

adminUser(for me)
    -email
    -password
    -twofactorAuthentication(for normal user maybe later)
    -backup_authentication_plan
    -todos
    -alerts
    -revenue_stats(expenses,revenue,full graph data) we will directly store it in this model

projectRequest
    -project_id
    -user_id
    -amountPropsed
    -budget
    -status
    -deadline
    -type(contract,full_time,part_time)
    -perHourFee (X)

project
    -title
    -delete_on
    -company_id
    -user_id_of_uploaded

chatRoom
    -type(slack,teams,rocketChat,etc)
    -user_ids
    -project_id(this will hold client_id)
    -message_log(maybe store message here also apart from third party)

transaction
    -user_id
    -type(isWithdrawl,transfer)
    -status
    -isRefunded
    -amount
    -source(it could be gigsChad or something else..)
    -type(upi,bank_transfer)
    -medium(paytm,paypal,razorpay)




